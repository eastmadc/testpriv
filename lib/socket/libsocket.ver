libsocket.so.2 {
	global:
		__b64_ntop;
		__b64_pton;
		accept;
		allocaddrinfo;
		be16toh;
		be32toh;
		be64toh;
		bind;
		_bindresvport;
		bindresvport;
		_bindresvport_sa;
		bindresvport_sa;
		_check_rhosts_file;
		__cmsg_alignbytes;
		connect;
		__dn_comp;
		dn_comp;
		__dn_skipname;
		dn_skipname;
		_dn_expand;
		dn_expand;
		_endhostent;
		endhostent;
		_endnetent;
		endnetent;
		_endprotoent;
		endprotoent;
		_endprotoent_r;
		endprotoent_r;
		_endservent;
		endservent;
		_endservent_r;
		endservent_r;
		_ether_aton;
		ether_aton;
		_ether_hostton;
		ether_hostton;
		_ether_line;
		ether_line;
		_ether_ntoa;
		ether_ntoa;
		_ether_ntohost;
		ether_ntohost;
		_freeaddrinfo;
		freeaddrinfo;
		_freeifaddrs;
		freeifaddrs;
		_gai_strerror;
		gai_strerror;
		get_media_mode;
		get_media_mode_string;
		get_media_options;
		get_media_option_string;
		get_media_subtype;
		get_media_subtype_string;
		get_media_type_string;
		_getaddrinfo;
		getaddrinfo;
		_getdomainname;
		getdomainname;
		_gethostbyaddr;
		gethostbyaddr;
		_gethostbyaddr_r;
		gethostbyaddr_r;
		_gethostbyname;
		gethostbyname;
		gethostbyname2;
		gethostbyname2_r;
		_gethostbyname_r;
		gethostbyname_r;
		_gethostent;
		gethostent;
		_gethostent_r;
		gethostent_r;
		_getifaddrs;
		getifaddrs;
		getifaddrs_fib;
		_getnameinfo;
		getnameinfo;
		_getnetbyaddr;
		getnetbyaddr;
		_getnetbyname;
		getnetbyname;
		_getnetent;
		getnetent;
		getpeereid;
		getpeername;
		_getprotobyname;
		getprotobyname;
		_getprotobyname_r;
		getprotobyname_r;
		_getprotobynumber;
		getprotobynumber;
		_getprotobynumber_r;
		getprotobynumber_r;
		_getprotoent;
		getprotoent;
		_getprotoent_r;
		getprotoent_r;
		_getservbyname;
		getservbyname;
		_getservbyname_r;
		getservbyname_r;
		_getservbyport;
		getservbyport;
		_getservbyport_r;
		getservbyport_r;
		_getservent;
		getservent;
		_getservent_r;
		getservent_r;
		_getlong;
		_getshort;
		getsockname;
		getsockopt;
		__h_errno;
		__h_errno_set;
		h_errno;
		_herror;
		herror;
		hstrerror;
		htobe16;
		htobe32;
		htobe64;
		htole16;
		htole32;
		htole64;
		_if_freenameindex;
		if_freenameindex;
		_if_indextoname;
		if_indextoname;
		if_indextoname_fib;
		_if_nameindex;
		if_nameindex;
		_if_nametoindex;
		if_nametoindex;
                if_nametoindex_fib;
		_in6addr_any;
		in6addr_any;
		_in6addr_linklocal_allnodes;
		in6addr_linklocal_allnodes;
		_in6addr_loopback;
		in6addr_loopback;
		_in6addr_nodelocal_allnodes;
		in6addr_nodelocal_allnodes;
		_in6addr_linklocal_allrouters;
		in6addr_linklocal_allrouters;
		_inet6_opt_init;
		inet6_opt_init;
		_inet6_opt_append;
		inet6_opt_append;
		_inet6_opt_finish;
		inet6_opt_finish;
		_inet6_opt_set_val;
		inet6_opt_set_val;
		_inet6_opt_next;
		inet6_opt_next;
		_inet6_opt_find;
		inet6_opt_find;
		_inet6_opt_get_val;
		inet6_opt_get_val;
		_inet6_option_alloc;
		inet6_option_alloc;
		_inet6_option_append;
		inet6_option_append;
		_inet6_option_find;
		inet6_option_find;
		_inet6_option_init;
		inet6_option_init;
		_inet6_option_next;
		inet6_option_next;
		_inet6_option_space;
		inet6_option_space;
		_inet6_rth_space;
		inet6_rth_space;
		_inet6_rth_init;
		inet6_rth_init;
		_inet6_rth_add;
		inet6_rth_add;
		_inet6_rth_reverse;
		inet6_rth_reverse;
		_inet6_rth_segments;
		inet6_rth_segments;
		_inet6_rth_getaddr;
		inet6_rth_getaddr;
		_inet6_rthdr_add;
		inet6_rthdr_add;
		_inet6_rthdr_getaddr;
		inet6_rthdr_getaddr;
		_inet6_rthdr_getflags;
		inet6_rthdr_getflags;
		_inet6_rthdr_init;
		inet6_rthdr_init;
		_inet6_rthdr_lasthop;
		inet6_rthdr_lasthop;
		_inet6_rthdr_segments;
		inet6_rthdr_segments;
		_inet6_rthdr_space;
		inet6_rthdr_space;
		_inet_lnaof;
		inet_lnaof;
		_inet_makeaddr;
		inet_makeaddr;
		_inet_net_ntop;
		inet_net_ntop;
		_inet_net_pton;
		inet_net_pton;
		_inet_netof;
		inet_netof;
		_inet_network;
		inet_network;
		_inet_ntoa;
		inet_ntoa;
		_inet_ntoa_r;
		inet_ntoa_r;
		_ioctl_socket;
		ioctl_socket;
		iruserok;
		iruserok_sa;
		__ivaliduser;
		__ivaliduser_sa;
		kvm_close;
		kvm_geterr;
		kvm_nlist;
		kvm_openfiles;
		kvm_read;
		kvm_write;
		le16toh;
		le32toh;
		le64toh;
		___learn_tree;
		__learn_tree;
		__learn_tree_fib;
		link_addr;
		link_ntoa;
		listen;
		nbaconnect;
		nbaconnect_result;
		_nsdispatch;
		nsdispatch;
		orcmd;
		orcmd_af;
		__putlong;
		__putshort;
		rcmd;
		rcmd_af;
		recv;
		recvfrom;
		recvmsg;
		recvmmsg;
		_res;
		__res_state;
		__res_get_state;
		__res_put_state;
		__res_send_setqhook;
		__res_check;
		res_send_setqhook;
		__res_send_setrhook;
		res_send_setrhook;
		__res_close;
		res_close;
		__res_nclose;
		_res_init;
		res_init;
		__res_ndestroy;
		__res_ninit;
		_res_mkquery;
		res_mkquery;
		__res_mkquery;
		_res_query;
		res_query;
		__res_querydomain;
		res_querydomain;
		__res_nquerydomain;
		_res_search;
		res_search;
		__res_nsearch;
		__res_send;
		res_send;
		__res_nsend;
		rresvport;
		rresvport_af;
		ruserok;
		send;
		sendmsg;
		sendmmsg;
		sendto;
		setdomainname;
		_sethostent;
		sethostent;
		_setnetent;
		setnetent;
		_setprotoent;
		setprotoent;
		_setprotoent_r;
		setprotoent_r;
		_setservent;
		setservent;
		_setservent_r;
		setservent_r;
		setsockopt;
		shutdown;
		sockatmark;
		socket;
		socketpair;
		_sysctl;
		sysctl;
		_sysctlbyname;
		sysctlbyname;
		_sysctlgetmibinfo;
		sysctlgetmibinfo;
		_sysctlfd;
		sysctlfd;
		_sysctlnametomib;
		sysctlnametomib;
		sysctl_fib;
		sysctlbyname_fib;
		sysctlgetmibinfo_fib;
		sysctlfd_fib;
		sysctlnametomib_fib;
	local:
		*;
};
